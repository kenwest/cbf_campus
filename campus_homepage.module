<?php
// $Id$

/**
  * Campus Homepage
  * Copyright (c) Tom Gillett 2011
  */


/**
 * Implementation of hook_views_api().
 */
function campus_homepage_views_api() {
	return array(
		'api' => 3,
		'path' => DRUPAL_ROOT . '/' . drupal_get_path('module', 'campus_homepage')
	);
}

/**
 * Implementation of hook_ctools_plugin_api().
 */
function campus_homepage_ctools_plugin_api($module, $api) {
	if($module == 'page_manager' && $api == 'pages_default') {
		return array('version' => 1);
	}

	require_once(DRUPAL_ROOT . '/' . drupal_get_path('module', 'campus_homepage') . '/campus_homepage.ctools.inc');
}

/**
  * Implementation of hook_perm().
  */
function campus_homepage_permission(){
  return array('campus administration' => array(
               'title' => t('Campus Administration'),
               'description' => t('Administer the Campus module') ) );
}

/**
  * Implementation of hook_menu()
  */
function campus_homepage_menu(){
	$items['admin/settings/campus/homepage'] = array(
		'title' => 'Campus Homepage',
		'description' => 'Manage Campus Homepages',
		'page callback' => 'campus_homepage_list',
		'access arguments' => array('campus administration'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'campus_homepage.admin.inc'
	);

	$items['admin/settings/campus/homepage/add/%'] = array(
		'title' => 'Add Campus Homepage',
		'file' => 'campus_homepage.admin.inc',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('campus_homepage_add', 5),
		'access arguments' => array('campus administration'),
		'type' => MENU_CALLBACK,
		'weight' => 1
	);

	return $items;
}


/* Implementation of hook_taxonomy(). */
function campus_homepage_taxonomy($op, $type, $data = null){
	$watchlist = array();
	$rows = db_query("SELECT * FROM {taxonomy_watchlist} WHERE module = 'campus_homepage'");
	foreach ($rows as $row){
		$watchlist[] = $row->vid;
	}

	if(!empty($watchlist) && !empty($data['vid'])){
		if($type == 'term' && in_array($data['vid'], $watchlist)){

			switch($op){
				case 'insert':
					if($nid = campus_homepage_tweak_node('create', $data['tid'], $data['name'])){
						drupal_set_message('Created campus homepage.');
					}
					break;

				case 'update':
					if(campus_homepage_tweak_node('edit', $data['tid'], $data['name'])){
						drupal_set_message('Updated campus homepage title.');
					}
					break;

				case 'delete':
					drupal_set_message('Please note: nodes associated with this term are not removed automatically.', 'warning');
					break;
			}

		}
	}
}

function campus_homepage_tweak_node($op, $id, $title = null){
	$suffix = ' Campus Homepage';

	switch($op){
		case 'create':
			$tid = $id;

			//TODO: Check to make sure that node does not exist already 
			$node = new StdClass();
			$node->type = 'campus_homepage';
			$node->status = 0;
			$node->taxonomy = array($tid);
			$node->title = ucwords($title) . $suffix;
			$node->body = array(
			  'und' => array(
			    array(
			      'value'        => '',
			      'summary'      => '',
			      'format'       => '1',
			      'safe_value'   => '',
			      'safe_summary' => ''
			    ) ) );

			node_save($node);
			return $node->nid;

			break;

		case 'edit':
			$existing = campus_homepage_find_nid_by_tid($id);
			if(count($existing) == 1){
				$node = node_load($existing['nid']);
				$node->title = $title.$suffix;
				node_save($node);
				return $node->nid;
			}
			break;

		case 'delete':
			break;
	}

}

function campus_homepage_find_nid_by_tid($tid){
	$results = db_query(
		"SELECT node.nid AS nid FROM {node} AS node
		 LEFT JOIN {taxonomy_index} AS taxonomy_index ON node.nid = taxonomy_index.nid 
		 INNER JOIN {taxonomy_term_data} AS taxonomy_term_data ON taxonomy_index.tid = taxonomy_term_data.tid 
		 WHERE node.type in ('campus_homepage') AND taxonomy_term_data.tid = :tid", 
		array(':tid' => $tid));

//	drupal_set_message('<pre>'. print_r($results, true) .'</pre>');	
	return $results->fetchCol();
}
