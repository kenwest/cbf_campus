<?php
// $Id$
/**
  * Campus Contact Forms
  * Copyright (c) Tom Gillett 2011
  */


/* Implementation of hook_views_api(). */
function campus_contact_views_api() {
	return array(
		'api' => 3,
		'path' => drupal_get_path('module', 'campus_contact')
	);
}


/**
 * Implementation of hook_ctools_plugin_api().
function campus_contact_ctools_plugin_api($module, $api) {
	if($module == 'page_manager' && $api == 'pages_default') {
		return array('version' => 1);
	}
}

 * Implementation of hook_default_page_manager_handlers()
function campus_contact_default_page_manager_handlers() {
//	include_once './'. drupal_get_path('module', 'campus_homepage') .'/includes/definitions/page_manager_variant.campus_contact.inc';
//	return $handlers;
}
 */


/**
  * Implementation of hook_menu()
  */
function campus_contact_menu(){
	$items['admin/settings/campus/contact'] = array(
		'title' => 'Contact Webforms',
		'description' => 'Manage Contact Webforms',
		'page callback' => 'campus_contact_list',
		'access arguments' => array('campus administration'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'campus_contact.admin.inc'
	);

	$items['admin/settings/campus/contact/add/%'] = array(
		'title' => 'Add Contact Webform',
		'file' => 'campus_contact.admin.inc',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('campus_contact_add', 5),
		'access arguments' => array('campus administration'),
		'type' => MENU_CALLBACK,
		'weight' => 1
	);

	return $items;
}


/* Implementation of hook_homepage_taxonomy(). */
function campus_contact_taxonomy($op, $type, $data = null){
	$watchlist = array();
	$rows = db_query("SELECT * FROM {taxonomy_watchlist} WHERE module = 'campus_homepage'");

	foreach($rows as $rows){
		$watchlist[] = $row->vid;
	}

	if(!empty($watchlist) && !empty($data['vid'])){
		if($type == 'term' && in_array($data['vid'], $watchlist)){

			switch($op){
				case 'insert':
					$result = campus_contact_tweak_node('create', $data['tid'], $data['name']);
					if($result){
						drupal_set_message("Created Contact Webform node for {$data['name']}.");
					} else {
						drupal_set_message("Node creation failed for {$data['name']}. Perhaps this term already has a Contact Webform?", 'warning');
					}

					break;

				case 'update':
					if(campus_contact_tweak_node('edit', $data['tid'], $data['name'])){
						drupal_set_message('Updated campus title on contact webform.');
					}
					break;

				case 'delete':
					drupal_set_message('Please note: contact webforms associated with this term are not removed automatically.', 'warning');
					break;
			}

		}
	}
}

function campus_contact_tweak_node($op, $id, $title = null){
	$suffix = ' Campus Contact Form';

	switch($op){
		case 'create':
			// Checks to make sure that the taxonomy term does not already have a node associated with it.
			$nodes = campus_contact_find_nid_by_tid($id);
			$term = taxonomy_term_load($id);
			if(empty($nodes) && !empty($term)){
				$tid = $id;

				// Imports the node from the file definition.
				$fgc = file_get_contents('./'. drupal_get_path('module', 'campus_homepage') .'/includes/definitions/node.campus_contact.inc');

				// Configure the title.
				$fgc = str_replace(
						"'title' => '',", 
						"'title' => '{$title}{$suffix}',", 
						$fgc
				);

				// Configure the taxonomy association.
				$fgc = str_replace(
						"'taxonomy' => array(),", 
						"'taxonomy' => array('{$term->vid}' => array('{$term->tid}' => '{$term->tid}')),", 
						$fgc
				);
				
//				drupal_set_message('<pre>'. print_r($fgc, true) .'</pre>');	
				return node_export_import($fgc, 'save-edit', false, 'campus_contact_msg_function');
			} 

			return false;
			break;

		case 'edit':
			$existing = campus_contact_find_nid_by_tid($id);
			if(count($existing) == 1){
				$node = node_load($existing['nid']);
				$node->title = $title.$suffix;
				node_save($node);
				return $node->nid;
			}

			return false;
			break;

		case 'delete':
			break;
	}

}

// We don't want to print node_export_import messages to the user, so we dead-end the message function.
function campus_contact_msg_function($message){
	return true;
}

function campus_contact_find_nid_by_tid($tid){
	$results = db_query(
		"SELECT node.nid AS nid FROM {node} AS node
		 LEFT JOIN {taxonomy_index} AS taxonomy_index ON node.nid = taxonomy_index.nid 
		 INNER JOIN {taxonomy_term_data} AS taxonomy_term_data ON taxonomy_index.tid = taxonomy_term_data.tid 
		 WHERE node.type in ('contact_webform') AND taxonomy_term_data.tid = :tid", 
		array(':tid' => $tid));

//	drupal_set_message('<pre>'. print_r($results, true) .'</pre>');	
	return $results->fetchCol();
}
